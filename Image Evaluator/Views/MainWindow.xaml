<Window x:Class="CBCTQC.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="QC Phantom Image Evaluation" Icon="/Resources/Icon.ico" Height="768" Width="1024">
    <Window.Resources>
    </Window.Resources>

    <Grid x:Name="MainGrid" Margin="16,8,16,16" ScrollViewer.VerticalScrollBarVisibility="Disabled">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ControlColumn" Width="83*"/>
            <ColumnDefinition x:Name="ImageColumn" Width="163*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FF3D5EF1" Grid.Column="0"/>
        <Rectangle Fill="#FF9F62E8" Grid.Column="1"/>

        <Canvas x:Name="Canvas" Margin="0,30,0,30" ClipToBounds="True" Grid.Column="1" Background="#FF394157" MouseMove="Canvas_MouseMove" SizeChanged="Canvas_SizeChanged" MouseRightButtonDown="Canvas_MouseRightButtonDown" MouseRightButtonUp="Canvas_MouseRightButtonUp" MouseLeftButtonDown="Canvas_MouseLeftButtonDown" MouseLeftButtonUp="Canvas_MouseLeftButtonUp" MouseWheel="Canvas_MouseWheel">
            <Image x:Name="ImagePanel"/>
        </Canvas>
        <Label Content="Pixel Position:" Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Height="30" Width="82" Foreground="White"/>
        <Label x:Name="PixelPosition" Content="" Grid.Column="1" Margin="80,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Width="77" Height="30" Foreground="White"/>
        <Label Content="CT Number:" Grid.Column="1" Margin="234,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Height="30" Width="73" Foreground="White"/>
        <Label x:Name="CTNumber" Content="" Grid.Column="1" Margin="302,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Width="61" Height="30" Foreground="White"/>
        <Label Content="Window Level:" Grid.Column="1" Margin="417,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Height="30" Width="86" Foreground="White"/>
        <Label x:Name="WindowLevel" Content="" Grid.Column="1" Margin="498,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Width="103" Height="30" Foreground="#FFFBFBFB"/>
        <ProgressBar x:Name="measurementProgressBar" Grid.Column="1" BorderThickness="0" Background="{x:Null}" Height="30" VerticalAlignment="Bottom"/>

        <ToggleButton Name="ButtonImageManipulation" Margin="253,0,245,0" Background="{x:Null}" BorderThickness="0" Click="ButtonImageMamipulation_Click" VerticalAlignment="Top" Height="30" Width="154" HorizontalAlignment="Center" Grid.Column="1" Foreground="White">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Content" Value="Enable Image Adjustment"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="Disable Image Adjustment"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <Button x:Name="ButtonCancelMeasurement" Content="Cancel Measurement" Margin="10,0,0,0" VerticalAlignment="Top" Grid.Column="1" Click="ButtonCancelMeasurement_Click" Height="30" Background="{x:Null}" BorderThickness="0" Width="128" HorizontalAlignment="Left" Foreground="White"/>
        <!--Control are cropped due to margin problem, use a viewbox to avoid marign issues-->

        <Viewbox Margin="0,0,0,0" Grid.Column="0" Stretch="None">
            <Grid Height="657" Width="256">
                <Button x:Name="ButtonSelectImage" Content="Select Image" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Click="ButtonSelectImage_Click" Height="40" BorderThickness="1" Background="{x:Null}" Foreground="White" FontSize="16" Width="178" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="38,0,40,554"/>
                <Button x:Name="ButtonMeasure" Content="Start Measurement" Click="ButtonMeasure_Click" Height="40" Background="{x:Null}" BorderThickness="1" VerticalAlignment="Center" Foreground="White" FontSize="16" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" Width="178" Margin="38,48,40,506"/>
                <Button x:Name="ButtonShowContrastImage" Content="Show Contrast Image" Height="28" Background="{x:Null}" BorderThickness="1" Width="155" Click="ButtonShowContrastImage_Click" Foreground="White" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="48,112,53,454"/>
                <Button x:Name="ButtonShowCoronalNoiseImage" Content="Show Coronal Noise Image" Height="28" Background="{x:Null}" BorderThickness="1" Click="ButtonShowCoronalNoiseImage_Click" Width="155" Foreground="White" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="48,178,53,388"/>
                <Button x:Name="ButtonShowSagittalNoiseImage" Content="Show Sagittal Noise Image" Height="27" Background="{x:Null}" BorderThickness="1" Width="155" Click="ButtonShowSagittalNoiseImage_Click" Foreground="White" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="48,211,53,356"/>
                <Button x:Name="ButtonShowCalcificationImage" Content="Show Calcification Image" Height="28" Background="{x:Null}" BorderThickness="1" Width="155" Click="ButtonShowCalcificationImage_Click" Foreground="White" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="48,145,53,421"/>
                <Button x:Name="ButtonClose" Content="Close" Height="33" Background="{x:Null}" BorderThickness="1" Width="106" Foreground="White" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="68,603,82,21" FontSize="16" Click="ButtonClose_Click"/>

                <DataGrid x:Name="DataGridMeasurementResult" Margin="0,421.5,0,93.5" IsHitTestVisible="False" Background="{x:Null}" Grid.Column="0" HeadersVisibility="None" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" IsReadOnly="True" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FFF12B2B" VerticalGridLinesBrush="#FF21E017" AlternatingRowBackground="#FF4968F3" RowBackground="#FF284DF5" AreRowDetailsFrozen="True" SelectionUnit="Cell" SelectionMode="Single" GridLinesVisibility="None" FontFamily=".LastResort" FontSize="14" IsSynchronizedWithCurrentItem="True" VerticalScrollBarVisibility="Disabled" UseLayoutRounding="False" ScrollViewer.CanContentScroll="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="256" Height="142">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Key"  Binding="{Binding Key}" CanUserResize="False">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <Setter Property="Foreground" Value="LightGray"/>
                                </Style>

                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Result" Binding="{Binding Value}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Height" Value="28"/>
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
                        </Style>
                    </DataGrid.RowStyle>

                </DataGrid>
                <TextBox Margin="62,397,74,236" TextWrapping="Wrap" Text="Results" Width="120" Foreground="White" Background="{x:Null}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" FontFamily="Arial Unicode MS" TextAlignment="Center" BorderThickness="0" IsUndoEnabled="False" IsEnabled="False" HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" RenderTransformOrigin="0.85,0.52"/>


                <DataGrid x:Name="DataGridDetectionResult" Margin="0,333,0,272" Grid.Column="0" IsHitTestVisible="False" Background="{x:Null}" AutoGenerateColumns="False" CanUserResizeRows="False" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" EnableRowVirtualization="False" BorderThickness="0" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" IsReadOnly="True" ScrollViewer.CanContentScroll="False" GridLinesVisibility="None" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" FontFamily=".LastResort" FontSize="14" HeadersVisibility="None" HorizontalAlignment="Center" VerticalAlignment="Center" Width="256" Height="52" RowBackground="#FF3D5EF1" IsManipulationEnabled="True" SelectionUnit="Cell" SelectionMode="Single" BorderBrush="#FF7BB1E6">
                    <!--You can add your defined style in resources like a global function or variable, then this control can use it.
            If you need a defined style window-wide, put this in the window.resources-->
                    <DataGrid.Resources>
                        <Style x:Key="MyTextBlock" TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                            <!--Triggers is used in style to perform action on change any property value or event fires.
                    Triggers create visual effects on controls. By using Triggers we can change the appearance of Framework Elements.-->
                            <Style.Triggers>
                                <Trigger Property="Text" Value="✓">
                                    <Setter Property="Foreground" Value="LightGreen"/>
                                </Trigger>
                                <Trigger Property="Text" Value="X">
                                    <Setter Property="Foreground" Value="DarkRed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Phantom"  Binding="{Binding Phantom}" CanUserReorder="False" CanUserResize="False" ElementStyle="{StaticResource MyTextBlock}" />
                        <DataGridTextColumn Header="Tumor" Binding="{Binding Tumor}" CanUserReorder="False" CanUserResize="False" ElementStyle="{StaticResource MyTextBlock}"/>
                        <DataGridTextColumn Header="Water" Binding="{Binding Water}" CanUserResize="False" CanUserReorder="False" ElementStyle="{StaticResource MyTextBlock}"/>
                        <DataGridTextColumn Header="Calcification"  Binding="{Binding Calcification}" CanUserResize="False" CanUserReorder="False" ElementStyle="{StaticResource MyTextBlock}"/>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Height" Value="23"/>
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                <TextBox Margin="62,307,62,324" TextWrapping="Wrap" Grid.Column="0" Text="Detected Objects" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="Arial Unicode MS" FontSize="16" BorderThickness="0" IsEnabled="False" IsUndoEnabled="False" HorizontalAlignment="Center" VerticalAlignment="Center" Width="132" Height="26"/>
            </Grid>
        </Viewbox>

        <Button x:Name="ButtonSaveImage" Content="Save Image" VerticalAlignment="Top" Grid.Column="1" Click="ButtonSaveImage_Click" Height="30" Background="{x:Null}" BorderThickness="0" Width="87" HorizontalAlignment="Right" Foreground="White" Margin="0,0,10,0"/>
        
    </Grid>
</Window>
